apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: linkding-app
  namespace: linkding
spec:
  endpointSelector:
    matchLabels:
      app: linkding
  ingress:
    # Erlaube Zugriff von cloudflared Pods
    - fromEndpoints:
        - matchLabels:
            app: cloudflared
            namespace: linkding
    - fromEndpoints:
        - {}
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: monitoring
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: cnpg-system
  egress:
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
        - ports:
            - port: "53"
              protocol: TCP
    - toEndpoints:
        - {}
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
        - ports:
            - port: "80"
        - ports:
            - port: "7844"
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: linkding-database
  namespace: linkding
spec:
  endpointSelector:
    matchLabels:
      app: linkding-database
  ingress:
    # Erlaube Zugriff von pgadmin
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: pgadmin
      toPorts:
        - ports:
            - port: "5432"
    # Erlaube Zugriff von anderen Database-Pods (für Replikation)
    - fromEndpoints:
        - matchLabels:
            app: linkding-database
      toPorts:
        - ports:
            - port: "5432"
    - fromEndpoints:
        - {}
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: monitoring
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: cnpg-system
  egress:
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
        - ports:
            - port: "53"
              protocol: TCP
    # Erlaube Kommunikation mit anderen Database-Pods (für Replikation)
    - toEndpoints:
        - matchLabels:
            app: linkding-database
      toPorts:
        - ports:
            - port: "5432"
    - toEndpoints:
        - {}
    - toEntities:
        - kube-apiserver
      toPorts:
        - ports:
            - port: "6443"
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: cloudflared
  namespace: linkding
spec:
  endpointSelector:
    matchLabels:
      app: cloudflared
  ingress:
    - fromEndpoints:
        - {}
  egress:
    # DNS-Zugriff
    - toEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: kube-system
            k8s-app: kube-dns
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
        - ports:
            - port: "53"
              protocol: TCP
    # Zugriff auf linkding app
    - toEndpoints:
        - matchLabels:
            app: linkding
      toPorts:
        - ports:
            - port: "9090"
              protocol: TCP
    # Internet-Zugriff
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "7844"
              protocol: UDP
        - ports:
            - port: "443"
              protocol: TCP
        - ports:
            - port: "80"
              protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: deny-all
  namespace: linkding
spec:
  endpointSelector: {}
  ingress:
    - {}
  egress:
    - {}
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-webhook
  namespace: cnpg-system
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: cloudnative-pg
      app.kubernetes.io/component: webhook
  ingress:
    # Erlaube Zugriff von allen Namespaces
    - fromEndpoints:
        - {}
    # Expliziter Zugriff von Monitoring
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: monitoring
  egress:
    # DNS-Zugriff (UDP und TCP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
        - ports:
            - port: "53"
              protocol: TCP
    # Zugriff auf Kubernetes API Server
    - toEntities:
        - kube-apiserver
      toPorts:
        - ports:
            - port: "6443"
              protocol: TCP
    # Zugriff auf andere CloudNativePG-Komponenten
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: cloudnative-pg
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
    # Erlaube Zugriff auf beliebige Endpoints im Cluster
    - toEndpoints:
        - {}
    # Internet-Zugriff wenn benötigt
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
