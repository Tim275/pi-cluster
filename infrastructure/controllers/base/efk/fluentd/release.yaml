apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: logstash
  namespace: logging
spec:
  interval: 15m
  chart:
    spec:
      chart: logstash
      version: "7.17.3"
      sourceRef:
        kind: HelmRepository
        name: elastic
        namespace: logging
  uninstall:
    keepHistory: false
  install:
    timeout: 10m
  values:
    # Use Deployment
    kind: Deployment

    # Resources
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

    # Java settings
    logstashJavaOpts: "-Xms128m -Xmx256m"

    # No persistence
    persistence:
      enabled: false

    # IMPORTANT: Fixed security context for Elastic images
    securityContext:
      runAsUser: 1000 # Must be explicit
      runAsNonRoot: true

    podSecurityContext:
      runAsUser: 1000
      fsGroup: 1000

    # Volume setup
    extraVolumes:
      - name: logstash-data
        emptyDir: {}

    extraVolumeMounts:
      - name: logstash-data
        mountPath: /usr/share/logstash/data

    # Init container with proper permissions
    extraInitContainers:
      - name: setup-dirs
        image: busybox
        command:
          [
            "sh",
            "-c",
            "mkdir -p /logstash-data/sincedb && chmod -R 777 /logstash-data",
          ]
        securityContext:
          runAsUser: 1000 # Non-root
        volumeMounts:
          - name: logstash-data
            mountPath: /logstash-data

    # Simple configuration
    logstashConfig:
      logstash.yml: |
        http.host: "0.0.0.0"
        path.data: /usr/share/logstash/data
        log.level: info
        pipeline.workers: 1

    # HTTP input instead of file input (no permissions needed)
    logstashPipeline:
      logstash.conf: |
        input {
          http {
            port => 8080
            codec => json
          }
        }

        output {
          elasticsearch {
            hosts => ["elasticsearch-master:9200"]
            user => "${ELASTICSEARCH_USER}"
            password => "${ELASTICSEARCH_PASSWORD}"
            index => "logs-%{+YYYY.MM.dd}"
          }
        }

    extraEnv:
      - name: ELASTICSEARCH_USER
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: username
      - name: ELASTICSEARCH_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: password

    # Service configuration
    service:
      type: ClusterIP
      ports:
        - name: http-input
          port: 8080
          protocol: TCP
          targetPort: 8080
