apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: logstash
  namespace: logging
spec:
  interval: 15m
  chart:
    spec:
      chart: logstash
      version: "7.17.3" # or your preferred version
      sourceRef:
        kind: HelmRepository
        name: elastic
        namespace: logging
  values:
    image: "docker.elastic.co/logstash/logstash"
    imageTag: "7.17.3" # Match with your Elasticsearch version

    logstashPipeline:
      logstash.conf: |
        input {
          file {
            path => "/var/log/containers/*.log"
            exclude => ["/var/log/containers/*fluentd*", "/var/log/containers/*logstash*", "/var/log/containers/*elastic*"]
            start_position => "beginning"
            sincedb_path => "/usr/share/logstash/data/sincedb"
            codec => "json"
            type => "container"
          }
        }

        filter {
          # Skip logs with excessive backslashes
          if [log] =~ /\\{4,}/ {
            drop {}
          }
          
          # Extract kubernetes metadata
          grok {
            match => { "path" => "/var/log/containers/%{DATA:pod_name}_%{DATA:namespace}_%{GREEDYDATA:container_name}\.log" }
          }
          
          # Add timestamps
          date {
            match => ["timestamp", "ISO8601"]
            target => "@timestamp"
          }
        }

        output {
          elasticsearch {
            hosts => ["elasticsearch-master:9200"]
            user => "${ELASTICSEARCH_USER}"
            password => "${ELASTICSEARCH_PASSWORD}"
            index => "logs-%{+YYYY.MM.dd}"
          }
        }

    extraVolumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: containers
        hostPath:
          path: /var/lib/docker/containers

    extraVolumeMounts:
      - name: varlog
        mountPath: /var/log
      - name: containers
        mountPath: /var/lib/docker/containers
        readOnly: true

    env:
      - name: ELASTICSEARCH_USER
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: username
      - name: ELASTICSEARCH_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: password

    persistence:
      enabled: true
