apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: fluentd
  namespace: logging
spec:
  interval: 15m
  chart:
    spec:
      chart: fluentd
      version: "2.8.0"
      sourceRef:
        kind: HelmRepository
        name: fluent
        namespace: logging
  values:
    ## Fluentd config
    configMaps:
      config.conf: |-
        # Logs collection and output configuration
        <source>
          @type forward
          port 24224
          bind 0.0.0.0
        </source>

        <source>
          @type tail
          path /var/log/containers/*.log
          pos_file /var/log/fluentd-containers.log.pos
          tag kubernetes.*
          read_from_head true
          <parse>
            @type json
            time_format %Y-%m-%dT%H:%M:%S.%NZ
          </parse>
        </source>

        <filter kubernetes.**>
          @type kubernetes_metadata
          @id filter_kube_metadata
        </filter>

        <match **>
          @type elasticsearch
          host elasticsearch-master
          port 9200
          user elastic
          password ${ELASTIC_PASSWORD}
          scheme https
          ssl_verify false
          index_name fluentd-${tag}-%Y.%m.%d
          logstash_format true
          logstash_prefix fluentd
          <buffer>
            flush_thread_count 4
            flush_interval 5s
            chunk_limit_size 2M
            queue_limit_length 32
            retry_max_interval 30
            retry_forever true
          </buffer>
        </match>

    env:
      # Pass Elasticsearch password to Fluentd
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: ELASTIC_PASSWORD

    # Set resource limits for Raspberry Pi
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 200Mi

    # Run on all nodes to collect logs
    tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
