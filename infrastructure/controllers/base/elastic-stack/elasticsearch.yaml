apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: efk
  namespace: elastic
spec:
  version: 8.15.0
  nodeSets:
  - name: default
    count: 2
    config:
      node.store.allow_mmap: false
      # Multi-Node Cluster Settings (NODE LEVEL)
      cluster.initial_master_nodes: ["efk-es-default-0", "efk-es-default-1"]
      discovery.seed_hosts: ["efk-es-default-0.efk-es-default", "efk-es-default-1.efk-es-default"]
      # ENTFERNE Index Settings von hier!
      # index.number_of_replicas: 1  # ❌ RAUS!
      # index.number_of_shards: 1    # ❌ RAUS!
    volumeClaimTemplates: 
      - metadata:
          name: elasticsearch-data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
          storageClassName: longhorn
    podTemplate:
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values: ["p2", "p3"]
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  elasticsearch.k8s.elastic.co/cluster-name: efk
              topologyKey: kubernetes.io/hostname
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 250m
            limits:
              memory: 2Gi
              cpu: 500m
          env:
          - name: ES_JAVA_OPTS
            value: "-Xms1g -Xmx1g"
  http:
    tls:
      selfSignedCertificate:
        disabled: true

#Ja, das ist korrekt konfiguriert!
#Der ECK Operator hat automatisch ein 2-Node Elasticsearch Cluster erstellt mit:

#Automatischer Replica-Erstellung für neue Indices
#Cluster Health = Green (keine Yellow-Warnung)
#High Availability - wenn ein Node ausfällt, läuft der andere weiter

#apiVersion: elasticsearch.k8s.elastic.co/v1
#kind: Elasticsearch
#metadata:
  #name: efk
  #namespace: elastic
#spec:
  #version: 8.15.0
  #nodeSets:
 # - name: default
   # count: 1    # Ein Node für Test
   # config:
   #   node.store.allow_mmap: false  # Wichtig für Raspberry Pi
  #  volumeClaimTemplates: 
   #   - metadata:
   #       name: elasticsearch-data
  #      spec:
  #        accessModes:
   #       - ReadWriteOnce
  #        resources:
   #         requests:
   #           storage: 5Gi
   #       storageClassName: longhorn  # Deine Storage Class
   # podTemplate:
   #   spec:
   #     containers:
   ##     - name: elasticsearch
   #       resources:
   #         requests:
   #           memory: 1Gi
   ##           cpu: 500m
    #        limits:
   #           memory: 2Gi  # Angepasst für Raspberry Pi
       #       cpu: 1000m
 # http:
   # tls:
    #  selfSignedCertificate:
   #     disabled: true  # TLS deaktiviert für einfacheren Test