apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: fluentd
  namespace: logging
spec:
  interval: 15m
  chart:
    spec:
      chart: fluentd
      version: "0.3.7" # Ältere stabile Version für bessere Kompatibilität
      sourceRef:
        kind: HelmRepository
        name: fluent
        namespace: logging
  values:
    # DaemonSet für alle Nodes
    kind: DaemonSet

    # Sehr einfache Konfiguration
    configMapConfigs:
      fluent.conf: |
        # Einfache Eingabe
        <source>
          @type tail
          path /var/log/containers/*.log
          pos_file /var/log/fluentd-containers.log.pos
          tag kubernetes.*
          read_from_head true
          <parse>
            @type json
          </parse>
        </source>

        # K8s Metadaten hinzufügen
        <filter kubernetes.**>
          @type kubernetes_metadata
        </filter>

        # Nach Elasticsearch senden
        <match kubernetes.**>
          @type elasticsearch
          host elasticsearch-master
          port 9200
          user "#{ENV['ELASTICSEARCH_USERNAME']}"
          password "#{ENV['ELASTICSEARCH_PASSWORD']}"
          index_name fluentd-%Y%m%d
        </match>

    # Auf allen Nodes laufen
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule

    # Zugriff auf Logs
    extraVolumeMounts:
      - name: varlog
        mountPath: /var/log
      - name: varlibdockercontainers
        mountPath: /var/lib/docker/containers
        readOnly: true

    extraVolumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers

    # Als Root laufen (für Log-Zugriff)
    securityContext:
      runAsUser: 0

    # Benötigte Plugins
    plugins:
      - fluent-plugin-kubernetes_metadata_filter
      - fluent-plugin-elasticsearch

    # Pi-freundliche Ressourcen
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 200Mi

    # Credentials aus Secret
    env:
      - name: ELASTICSEARCH_USERNAME
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: username
      - name: ELASTICSEARCH_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-credentials
            key: password
