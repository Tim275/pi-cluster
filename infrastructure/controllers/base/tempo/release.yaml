apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tempo
  namespace: tempo
spec:
  interval: 5m
  chart:
    spec:
      chart: tempo-distributed
      version: 1.15.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: tempo
  values:
    # ✅ Minimale Konfiguration - nur das Notwendige
    
    # Global
    global:
      clusterDomain: cluster.local
    
    # ✅ Reduzierte Replicas für Test
    distributor:
      replicas: 1
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_ACCESS_KEY_ID
        - name: MINIO_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_SECRET_ACCESS_KEY
      nodeSelector:
        kubernetes.io/arch: arm64
    
    ingester:
      replicas: 1  # ✅ Nur 1 Ingester für Test
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_ACCESS_KEY_ID
        - name: MINIO_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_SECRET_ACCESS_KEY
      nodeSelector:
        kubernetes.io/arch: arm64
    
    compactor:
      replicas: 1
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_ACCESS_KEY_ID
        - name: MINIO_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_SECRET_ACCESS_KEY
      nodeSelector:
        kubernetes.io/arch: arm64
    
    querier:
      replicas: 1  # ✅ Nur 1 Querier für Test
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_ACCESS_KEY_ID
        - name: MINIO_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_SECRET_ACCESS_KEY
      nodeSelector:
        kubernetes.io/arch: arm64
    
    queryFrontend:
      replicas: 1
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_ACCESS_KEY_ID
        - name: MINIO_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: tempo-minio-secret
              key: MINIO_SECRET_ACCESS_KEY
      nodeSelector:
        kubernetes.io/arch: arm64
    
    # ✅ Tempo-Konfiguration - EXTREM vereinfacht
    tempo:
      storage:
        trace:
          backend: s3
          s3:
            bucket: k3s-tempo
            endpoint: minio.minio.svc.cluster.local:9000
            region: eu-west-1
            access_key: ${MINIO_ACCESS_KEY_ID}
            secret_key: ${MINIO_SECRET_ACCESS_KEY}
            insecure: true
            path_style: true
      
      # ✅ Minimale Ingester-Konfiguration
      ingester:
        lifecycler:
          ring:
            kvstore:
              store: memberlist
            replication_factor: 1  # ✅ Nur 1 für Test
            heartbeat_period: 5s
            heartbeat_timeout: 1m
      
      # ✅ Minimale Distributor-Konfiguration
      distributor:
        ring:
          kvstore:
            store: memberlist
          heartbeat_period: 5s
          heartbeat_timeout: 1m
    
    # ✅ Traces
    traces:
      otlp:
        grpc:
          enabled: true
        http:
          enabled: true
    
    # ✅ Gossip Ring
    gossipRing:
      enabled: true
    
    # ✅ Memcached
    memcached:
      enabled: true
      nodeSelector:
        kubernetes.io/arch: arm64
    
    # ✅ Minio deaktivieren
    minio:
      enabled: false
    
    # ✅ ServiceMonitor
    serviceMonitor:
      enabled: true
      labels:
        release: prometheus